{"mappings":"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","sources":["./src/units.js","./src/search.js","./src/result.js","./app.js"],"sourcesContent":["/*\nKCentra Factor unit variations per vial:\n500-unit:  400 to 620\n1000-unit: 800 to 1240 */\n\nmodule.exports = JSON.stringify([\n{unit: 533, quantity: 4},\n{unit: 535, quantity: 3},\n{unit: 536, quantity: 1},\n{unit: 540, quantity: 6},\n{unit: 554, quantity: 1},\n{unit: 565, quantity: 2},\n{unit: 576, quantity: 2},\n{unit: 1097, quantity: 4},\n{unit: 1100, quantity: 4},\n{unit: 1155, quantity: 2}\n]);\n","var units = JSON.parse(require(\"./units\"));\nvar Result = require(\"./result\");\nfunction search(target) {\n  if (\"number\" !== typeof target) {\n    throw \"Target not specified (must be a number)\";\n  }\n  var uniqueUnits = units\n    .flatMap(function (unit) {\n      return new Result(target, [unit.unit], unit.unit);\n    })\n    .sort(function (a, b) {\n      return a.sum - b.sum;\n    });\n  var unitMultiples = units\n    .flatMap(function (unit) {\n      var multiples = [];\n      for (var i = 2; i <= unit.quantity; i++) {\n        var mult = [];\n        for (var j = 0; j < i; j++) {\n          mult.push(unit.unit);\n        }\n        multiples.push(new Result(target, mult, i * unit.unit));\n      }\n      return multiples;\n    })\n    .sort(function (a, b) {\n      return a.sum - b.sum;\n    });\n  var results = [...uniqueUnits, ...unitMultiples].sort(function (a, b) {\n    return b.score - a.score;\n  });\n  return results;\n}\n\nmodule.exports = search;\n","module.exports = function result(target, units, sum) {\n  var count = units.length;\n  var difference = sum - target;\n  var differencePercent = sum / target - 1;\n  units = JSON.parse(JSON.stringify(units));\n  var score =\n    difference === 0\n      ? (Math.pow(2, 53) - 1) / count\n      : Math.abs(1 / count / differencePercent);\n  return { count, difference, differencePercent, score, sum, target, units };\n};\n","process.on(\"uncaughtException\", function (err) {\n  console.error(\"There was an uncaught error!\\n\", err);\n  process.exit(1);\n});\nvar search = require(\"./src/search\");\n\nfunction resultPrint(result) {\n  var sign = result.difference > 0 ? \"+\" : \"-\";\n  var diff = Math.abs(result.difference).toPrecision(4);\n  var difp = Math.abs(result.differencePercent * 100).toPrecision(4);\n  return `Using target ${result.target}, a resulting sum of ${\n    result.sum\n  } uses the following units:\\n${result.units.join(\n    \", \"\n  )}\\nDifference of ${sign}${diff} (${sign}${difp}%)\\n`;\n}\nfunction optionPrint(result) {\n  var sign = \"-\";\n  var diff = Math.abs(result.difference).toPrecision(4);\n  var difp = Math.abs(result.differencePercent * 100).toPrecision(4);\n  return `One partial result for target ${result.target} contains a sum of ${\n    result.sum\n  } using the following units:\\n${result.units.join(\n    \", \"\n  )}\\nThis partial result has a difference of ${sign}${diff} (${sign}${difp}%)\\n`;\n}\n\n/* var sort = {\n  byScore: function (a, b) {\n    return b.score - a.score;\n  },\n  byVCount: function (a, b) {\n    return a.vCount - b.vCount;\n  },\n  byDiff: function (a, b) {\n    return Math.abs(a.diff) - Math.abs(b.diff);\n  },\n}; */\nvar args = require(\"minimist\")(process.argv.slice(2));\nvar target = args[\"target\"];\nif (\"undefined\" === typeof target) {\n  target = Math.floor(Math.random() * 5000) + 1;\n  console.log(`target: ${target}\\n`);\n}\nif (\"number\" === typeof target) {\n  var results = search(target);\n  var inRangeResults = [];\n  for (var result in results) {\n    if (Math.abs(results[result].differencePercent) < 0.1) {\n      inRangeResults.push(JSON.parse(JSON.stringify(results[result])));\n    }\n  }\n  var lowerResults = [];\n  for (var i = 0; i < results.length; i++) {\n    if (results[i].differencePercent <= -0.1) {\n      lowerResults.push(results[i]);\n    }\n  }\n  for (var i = 0; i < inRangeResults.length; i++) {\n    console.log(resultPrint(inRangeResults[i]));\n  }\n  for (var i = 0; i < lowerResults.length; i++) {\n    console.log(optionPrint(lowerResults[i]));\n  }\n  // TODO: find combinations of lowerResults if inRangeResults is empty...\n  //console.log(JSON.stringify(results));\n  return;\n}\n//console.log(`Not sure what the input is.\\n${args[\"target\"]}`);\n"],"names":["JSON","stringify","unit","quantity","$e0ef1f67de91b41016459d2bcf10b27a$var$units","parse","$e0ef1f67de91b41016459d2bcf10b27a$var$Result","target","units","sum","count","length","difference","differencePercent","score","Math","pow","abs","results","flatMap","sort","a","b","multiples","i","mult","j","push","process","on","err","console","error","exit","search","resultPrint","result","sign","diff","toPrecision","difp","join","optionPrint","args","argv","slice","floor","random","log","inRangeResults","lowerResults"],"version":3,"file":"app.js.map"}